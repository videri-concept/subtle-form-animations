$placeholder: rgba(255,255,255,0.8);
$red: rgba(255,0,0,1);
$dark: rgba(0,0,0,0.8);
$bright-green: #5eec38;

// Sass Mixin 
// Named Breakpoints are phone, tablet-portrait, tablet-landscape-desktop, large-desktop, non-retina, retina
@mixin respond-to($media) {
    /* Landscape phones and down */
    @if $media == xs {
        @media (max-width: 767px) { @content; }
    }
    /* Landscape phone to portrait tablet */
    @else if $media == sm {
        @media (min-width: 768px) and (max-width: 991px) {@content; }
    }
    /* Portrait tablet to landscape and desktop */
    @else if $media == md {
        @media (min-width: 992px) and (max-width: 1199px) { @content; }
    }
    /* desktop and large desktop */
    @else if $media == lg {
        @media (min-width: 1200px) and (max-width: 1439px) { @content; }
    }
     /* desktop and large desktop */
    @else if $media == xl {
        @media (min-width: 1439px) and (max-width: 1939px) { @content; }
    }
}

@mixin respondto($media...) {
    @each $mediatype in $media {
        @include respond-to($mediatype) {@content;}
    }
}

//Bootstrap text align for various sizes
.text-xs-left { text-align: left; }
.text-xs-right { text-align: right; }
.text-xs-center { text-align: center; }
.text-xs-justify { text-align: justify; }

@media (min-width: $screen-sm-min) {
    .text-sm-left { text-align: left; }
    .text-sm-right { text-align: right; }
    .text-sm-center { text-align: center; }
    .text-sm-justify { text-align: justify; }
}

@media (min-width: $screen-md-min) {
    .text-md-left { text-align: left; }
    .text-md-right { text-align: right; }
    .text-md-center { text-align: center; }
    .text-md-justify { text-align: justify; }
}

@media (min-width: $screen-lg-min) {
   .text-lg-left { text-align: left; }
   .text-lg-right { text-align: right; }
   .text-lg-center { text-align: center; }
   .text-lg-justify { text-align: justify; }
}

/**
 * For modern browsers
 * 1. The space content is one way to avoid an Opera bug when the
 *    contenteditable attribute is included anywhere else in the document.
 *    Otherwise it causes space to appear at the top and bottom of elements
 *    that are clearfixed.
 * 2. The use of `table` rather than `block` is only necessary if using
 *    `:before` to contain the top-margins of child elements.
 */
.cf:before,
.cf:after {
    content: " "; /* 1 */
    display: table; /* 2 */
}

.cf:after {
    clear: both;
}

/**
 * For IE 6/7 only
 * Include this rule to trigger hasLayout and contain floats.
 */
.cf {
    *zoom: 1;
}